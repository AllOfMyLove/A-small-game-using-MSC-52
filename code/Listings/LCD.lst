C51 COMPILER V9.52.0.0   LCD                                                               04/23/2020 15:25:35 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\keilOut\LCD.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE src\LCD.c OMF2 ROM(SMALL) OPTIMIZE(8,SIZE) BROWSE INCDIR(.\de
                    -pendence;.\src) DEBUG PRINT(.\Listings\LCD.lst) OBJECT(.\keilOut\LCD.obj)

line level    source

   1          #include "reg52.h"
   2          #include "LCD.h"
   3          
   4          
   5          void delay()
   6          {
   7   1          uchar j=0,i=0;
   8   1          for(j=0;j<255;j++)
   9   1              for(i=0;i<4;i++);
  10   1      }
  11          
  12          void write_char(uchar dat)
  13          {
  14   1          // 根据时序图
  15   1          RS = 1;
  16   1          RW = 0;
  17   1          E  = 0;
  18   1          LCD_PORT = dat;
  19   1          delay();
  20   1          E = 1;
  21   1          E = 0;
  22   1      }
  23          
  24          void write_cmd(uchar command)
  25          {
  26   1          RS = 0;
  27   1          RW = 0;
  28   1          E  = 0;
  29   1          LCD_PORT = command;
  30   1          delay();
  31   1          E = 1;
  32   1          E = 0;
  33   1      }
  34          
  35          void init_LCD()
  36          {
  37   1          write_cmd(0x38);    // 设置16×2显示，5×7点阵，8位数据接口
  38   1          write_cmd(0x0c);    // 设置开显示，不显示光标
  39   1          write_cmd(0x06);    // 写一个字符后地址指针加1
  40   1          write_cmd(0x01);    // 显示清0，数据指针清0
  41   1      }
  42          
  43          
  44          /**
  45           * @brief  在屏幕上显示字符串  
  46           * @param  addr: 需要显示首地址
  47           * @param  *str: 字符串的首地址
  48           */
  49          void display_LCD(uchar addr,char *str)
  50          {
  51   1          uchar i = 0;
  52   1          write_cmd(addr);
  53   1          while(str[i]!='\0')
  54   1          {
C51 COMPILER V9.52.0.0   LCD                                                               04/23/2020 15:25:35 PAGE 2   

  55   2              write_char(str[i]);
  56   2              i++;
  57   2          }
  58   1      }
  59          
  60          #if 0
              /**
               * @brief  在屏幕上显示单个字符  
               * @param  addr: 需要显示地址
               * @param  str: 字符
               */
              void display_LCD_single(uchar addr ,char str)
              {
                  uchar i = 0;
                  write_cmd(addr);
                  write_char(str);
              }
              #endif
  73          
  74          /* mode=0：显示清零，指针清零
  75             mode=1: 仅指针清零   */
  76          void clear_LCD(bit mode)
  77          {
  78   1          if(mode == 0)
  79   1              write_cmd(0x01);    // 显示清0，数据指针清0
  80   1          if(mode == 1)
  81   1              write_cmd(0x02);
  82   1      }
  83          
  84          
  85          char str[4];
  86          char* uchar2string(uchar n)
  87          {
  88   1      
  89   1          uchar *pStr;
  90   1          pStr = str;
  91   1          if (n > 99)
  92   1          {
  93   2              *pStr = n / 100 + '0';
  94   2              n %= 100;
  95   2              pStr += 1;
  96   2              *pStr = n / 10 + '0';
  97   2              n %= 10;
  98   2              pStr += 1;
  99   2              *pStr = n + '0';
 100   2          }
 101   1          if (n > 9)
 102   1          {
 103   2              *pStr = n / 10 + '0';
 104   2              n %= 10;
 105   2              pStr += 1;
 106   2              *pStr = n + '0';
 107   2          }
 108   1          if (n < 10)
 109   1          {
 110   2              *pStr = n + '0';
 111   2          }
 112   1          pStr += 1;
 113   1          *pStr = '\0';
 114   1          return str;
 115   1      }

C51 COMPILER V9.52.0.0   LCD                                                               04/23/2020 15:25:35 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    230    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
